name: üöÄ Deploy to Azure with Terraform

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "./src/api"
  AZURE_STATICWEBAPP_PACKAGE_PATH: "./src/frontend"
  NODE_VERSION: "20.x"
  TERRAFORM_VERSION: "1.6.0"

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    name: üèóÔ∏è Terraform Plan
    if: github.event_name == 'pull_request'

    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: üîß Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: üîê Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: üèóÔ∏è Terraform Init
        working-directory: ./infra
        run: terraform init

      - name: ‚úÖ Terraform Validate
        working-directory: ./infra
        run: terraform validate

      - name: üìã Terraform Plan
        working-directory: ./infra
        run: |
          terraform plan \
            -var="resource_group_name=${{ secrets.AZURE_RESOURCE_GROUP_NAME }}" \
            -var="environment_name=${{ secrets.AZURE_ENV_NAME }}" \
            -var="location=${{ secrets.AZURE_LOCATION }}" \
            -no-color

  build-and-deploy:
    runs-on: ubuntu-latest
    name: üöÄ Build and Deploy
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false

      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: |
            src/frontend/package-lock.json
            src/api/package-lock.json

      - name: ÔøΩ Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: üîê Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: üèóÔ∏è Terraform Init
        working-directory: ./infra
        run: terraform init

      - name: ‚úÖ Terraform Validate
        working-directory: ./infra
        run: terraform validate

      - name: üöÄ Terraform Apply
        working-directory: ./infra
        run: |
          terraform apply \
            -var="resource_group_name=${{ secrets.AZURE_RESOURCE_GROUP_NAME }}" \
            -var="environment_name=${{ secrets.AZURE_ENV_NAME }}" \
            -var="location=${{ secrets.AZURE_LOCATION }}" \
            -auto-approve

      - name: üì§ Get Terraform Outputs
        working-directory: ./infra
        run: |
          echo "FUNCTION_APP_NAME=$(terraform output -raw AZURE_FUNCTION_APP_NAME)" >> $GITHUB_ENV
          echo "STATIC_WEB_APP_NAME=$(terraform output -raw AZURE_STATIC_WEB_APP_NAME)" >> $GITHUB_ENV

      - name: ÔøΩüî® Build Frontend
        working-directory: ${{ env.AZURE_STATICWEBAPP_PACKAGE_PATH }}
        run: |
          npm ci
          npm run build

      - name: üî® Build Backend
        working-directory: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        run: |
          npm ci
          npm run build

      - name: üåê Deploy Static Web App
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: ${{ env.AZURE_STATICWEBAPP_PACKAGE_PATH }}
          api_location: ""
          output_location: "dist"

      - name: ‚ö° Deploy Function App
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.FUNCTION_APP_NAME }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

  test:
    runs-on: ubuntu-latest
    name: üß™ Run Tests

    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: |
            src/frontend/package-lock.json
            src/api/package-lock.json

      - name: üß™ Test Frontend
        working-directory: ${{ env.AZURE_STATICWEBAPP_PACKAGE_PATH }}
        run: |
          npm ci
          npm run lint
          npm run type-check

      - name: üß™ Test Backend
        working-directory: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        run: |
          npm ci
          npm run lint
          npm run test
